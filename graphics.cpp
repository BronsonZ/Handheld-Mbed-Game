#include "graphics.h"
#include "mbed.h"
#include <stdio.h>
#include "globals.h"


void draw_nothing(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+11, v+11, 0x7e5e00);
}

void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = 0xFFFF00; // Yellow
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'P') colors[i] = 0x00D700;
        else if (img[i] == 'D') colors[i] = 0xD2691E; // "Dirt"
        else if (img[i] == '5') colors[i] = LGREY; // 50% grey
        else if (img[i] == '3') colors[i] = DGREY;
        else if (img[i] == 'B') colors[i] = BLACK;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_plant(int u, int v)
{
    
int plant[121] = 
{
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 
0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x7e5e00, 
0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x7e5e00, 
0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x26ff00, 0x26ff00, 0x26ff00, 0x26ff00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0xff6500, 0xff6500, 0xff6500, 0xff6500, 0xff6500, 0xff6500, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0xff6500, 0xff6500, 0xff6500, 0xff6500, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0xff6500, 0xff6500, 0xff6500, 0xff6500, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00 
};
uLCD.BLIT(u, v, 11, 11, plant);
wait_us(250);
}

void draw_wall(int u, int v)
{
    //uLCD.filled_rectangle(u, v, u+10, v+10, DGREY);
    char image[121];
    int i = 0;
    while(i<121){
        image[i] = '5';
        if(i%4 == 0) image[i] = 'B';
        i++;
    }
    draw_img(u, v,  image);
}

void draw_apple(int u, int v)
{
 
 
int apple[121] =
{
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e2b00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e2b00, 0x7e2b00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e2b00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0xff0000, 0xff0000, 0x7e2b00, 0xff0000, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xffffff, 0xff0000, 0xff0000, 0x7e5e00, 
0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xffffff, 0xff0000, 0x7e5e00, 
0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xffffff, 0xff0000, 0xff0000, 0x7e5e00, 
0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x7e5e00, 0x7e5e00, 0x7e5e00     
};

 uLCD.BLIT(u, v, 11, 11, apple);
 wait_us(250);
}

void draw_sword(int u, int v)
{
int sword[121] = 
{
    
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x00ffff, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x00ffff, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x00ffff, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x00ffff, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x00ffff, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x00ffff, 0x00ffff, 0x00ffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, LGREY, LGREY, LGREY, LGREY, LGREY, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, LGREY, LGREY, LGREY, LGREY, LGREY, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, LGREY, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, LGREY, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00
};
 
 
uLCD.BLIT(u, v, 11, 11, sword);
wait_us(250);
}

void draw_bow(int u, int v)
{
int bow[121] = 
{
    
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x783400, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x783400, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x783400, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x7e5e00, 0xffffff, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x783400, 0x7e5e00, 0x7e5e00, 0x783400, 0x783400, 0x783400, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 
0x783400, 0x783400, 0x783400, 0x783400, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00, 0x7e5e00
};
 
 
uLCD.BLIT(u, v, 11, 11, bow);
wait_us(250); 
}

void draw_player1sprite(int u, int v)
{
int sprite[121] ={
0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 
0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 
0x004c7e, 0x000000, 0x000000, 0x000000, 0x000000, 0x004c7e, 0x000000, 0x000000, 0x000000, 0x000000, 0x004c7e, 
0x004c7e, 0x004c7e, 0xffffff, 0xffffff, 0x004c7e, 0x004c7e, 0x004c7e, 0xffffff, 0xffffff, 0x004c7e, 0x004c7e, 
0x004c7e, 0x004c7e, 0xffffff, 0x000000, 0x004c7e, 0x004c7e, 0x004c7e, 0xffffff, 0x000000, 0x004c7e, 0x004c7e, 
0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 
0x004c7e, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x004c7e, 0x004c7e, 
0x004c7e, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x004c7e, 0x004c7e, 
0x004c7e, 0x000000, 0x000000, 0xffffff, 0xff0000, 0xff0000, 0xffffff, 0xffffff, 0x000000, 0x004c7e, 0x004c7e, 
0x004c7e, 0x004c7e, 0x000000, 0x000000, 0x000000, 0xff0000, 0xffffff, 0x000000, 0x000000, 0x004c7e, 0x004c7e, 
0x004c7e, 0x004c7e, 0x004c7e, 0x004c7e, 0x000000, 0x000000, 0x000000, 0x000000, 0x004c7e, 0x004c7e, 0x004c7e   
};
    uLCD.BLIT(u, v, 11, 11, sprite);
    wait_us(250);
}

void draw_player2sprite(int u, int v)
{
int sprite[121] ={
0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0x000000, 0x000000, 0xb40000, 0xb40000, 0xb40000, 0x000000, 0x000000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0xb40000, 0x000000, 0x000000, 0xb40000, 0x000000, 0x000000, 0xb40000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0xffffff, 0xffffff, 0x000000, 0xb40000, 0x000000, 0xffffff, 0xffffff, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0xffffff, 0x000000, 0xb40000, 0xb40000, 0xb40000, 0x000000, 0xffffff, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0x000000, 0xffffff, 0x000000, 0xffffff, 0x000000, 0xffffff, 0x000000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xb40000, 0xb40000, 
0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000, 0xb40000
};
    uLCD.BLIT(u, v, 11, 11, sprite);
    wait_us(250);
}

void draw_selection(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, 0xC5C5C5);
}


void draw_upper_status()
{
    // Draw bottom border of status bar
    uLCD.line(0, 9, 127, 9, GREEN);
    
    // Add other status info drawing code here
}
 
void draw_lower_status()
{
    // Draw top border of status bar
    uLCD.line(0, 118, 127, 118, GREEN);
    
    // Add other status info drawing code here
}
 
void draw_right_line(int u, int v)
{
    uLCD.line(u + 10, v, u + 10, v + 10, WHITE); 
}
void draw_left_line(int u, int v)
{
    uLCD.line(u, v, u, v + 10, WHITE); 
}
void draw_top_line(int u, int v)
{
    uLCD.line(u, v , u + 10, v , WHITE); 
}
void draw_bottom_line(int u, int v)
{
    uLCD.line(u, v + 10, u + 10, v + 10, WHITE); 
}

void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, WHITE); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, WHITE); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, WHITE); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, WHITE); // Right
}
 
 
